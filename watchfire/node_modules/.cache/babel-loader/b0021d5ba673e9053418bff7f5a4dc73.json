{"ast":null,"code":"var _jsxFileName = \"/Users/mengwang/WatchfireDashboard/v5/src/component/VisLineChart/LineChart.js\";\nimport React from 'react';\nimport { ComposedChart, Line, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend, Area } from 'recharts';\nimport Title from '../dashboard/Title';\nimport $ from \"jquery\";\nimport { withTheme } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass VisLineChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: this.createData(),\n      startDate: new Date(this.convertDate(\"2016-01-02\")),\n      endDate: new Date(this.convertDate(\"2020-06-02\"))\n    };\n  }\n\n  createData() {\n    let data = [];\n    let i = 0;\n\n    for (i; i < 10; i++) {\n      data.push({\n        time: 0,\n        quantity: i,\n        firm_prediction: 0,\n        IBC_prediction: 0,\n        sd_interval: [10, 20]\n      });\n    }\n\n    return data;\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  convertDate(str) {\n    // console.log(str)\n    var date = new Date(str),\n        month = (\"0\" + (date.getUTCMonth() + 1)).slice(-2),\n        day = (\"0\" + date.getUTCDate()).slice(-2); // console.log(day);\n\n    return [date.getFullYear(), month, day].join(\"-\");\n  }\n\n  update() {\n    $.get(\"api/select_advanced\", data => {\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    const handleChange_model = event => {\n      $.ajax({\n        type: \"POST\",\n        url: \"api/select_advanced\",\n        data: {\n          model: event.target.value\n        },\n        success: () => this.update(),\n        error: () => this.update()\n      });\n      console.log(event.target.value);\n    };\n\n    function formatXAxis(str) {\n      // console.log(str)\n      var date = new Date(str),\n          month = (\"0\" + (date.getUTCMonth() + 1)).slice(-2),\n          day = (\"0\" + date.getUTCDate()).slice(-2);\n      return [date.getFullYear(), month, day].join(\"-\");\n    }\n\n    const handleChange_start = date => {\n      var start = this.convertDate(date);\n      console.log(start);\n      $.ajax({\n        type: \"POST\",\n        url: \"api/select_advanced\",\n        data: {\n          start_date: start\n        },\n        success: () => this.update(),\n        error: () => this.update()\n      });\n      this.setState({\n        startDate: date\n      });\n    };\n\n    const handleChange_end = date => {\n      var end = this.convertDate(date);\n      console.log(end);\n      $.ajax({\n        type: \"POST\",\n        url: \"api/select_advanced\",\n        data: {\n          end_date: end\n        },\n        success: () => this.update(),\n        error: () => this.update()\n      });\n      this.setState({\n        endDate: date\n      });\n    };\n\n    return console.log(this.state.startDate), console.log(this.state.endDate), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      fontSize: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Model\"), React.createElement(Select, {\n      native: true,\n      value: this.state.model,\n      onChange: handleChange_model,\n      inputProps: {\n        name: 'model',\n        id: 'age-native-simple'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: '2219',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"2219\"), React.createElement(\"option\", {\n      value: 'W8',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"W8\"), React.createElement(\"option\", {\n      value: 'W10',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"W10\"), React.createElement(\"option\", {\n      value: 'W16',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"W16\"), React.createElement(\"option\", {\n      value: 'W19',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"W19\"), React.createElement(\"option\", {\n      value: 'X8',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"X8\"), React.createElement(\"option\", {\n      value: 'X10',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"X10\"), React.createElement(\"option\", {\n      value: 'X16',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"X16\"), React.createElement(\"option\", {\n      value: 'X19',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"X19\"))), React.createElement(React.Fragment, null, React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: handleChange_start,\n      selectsStart: true,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      dateFormat: \"MM/yyyy\",\n      showMonthYearPicker: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      selected: this.state.endDate,\n      onChange: handleChange_end,\n      selectsEnd: true,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      dateFormat: \"MM/yyyy\",\n      showMonthYearPicker: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Quantity vs. Date\"), React.createElement(ResponsiveContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(ComposedChart, {\n      data: this.state.data,\n      margin: {\n        top: 16,\n        right: 16,\n        bottom: 0,\n        left: 34\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      dataKey: \"time\",\n      tickFormatter: formatXAxis,\n      stroke: this.props.theme.palette.text.secondary,\n      padding: {\n        left: 30,\n        right: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      dataKey: \"quantity\",\n      stroke: this.props.theme.palette.text.secondary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Label, {\n      angle: 270,\n      position: \"left\",\n      style: {\n        textAnchor: 'middle',\n        fill: this.props.theme.palette.text.primary\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Quantity\")), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"quantity\",\n      stroke: this.props.theme.palette.primary.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"IBC_prediction\",\n      stroke: \"#82ca9d\",\n      activeDot: {\n        r: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"firm_prediction\",\n      stroke: \"#FF0000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(Area, {\n      dataKey: \"sd_interval\",\n      stroke: \"#8884d8\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withTheme(VisLineChart);","map":{"version":3,"sources":["/Users/mengwang/WatchfireDashboard/v5/src/component/VisLineChart/LineChart.js"],"names":["React","ComposedChart","Line","XAxis","YAxis","Label","ResponsiveContainer","Tooltip","Legend","Area","Title","$","withTheme","FormControl","InputLabel","Select","DatePicker","VisLineChart","Component","constructor","state","data","createData","startDate","Date","convertDate","endDate","i","push","time","quantity","firm_prediction","IBC_prediction","sd_interval","componentDidMount","update","str","date","month","getUTCMonth","slice","day","getUTCDate","getFullYear","join","get","setState","render","handleChange_model","event","ajax","type","url","model","target","value","success","error","console","log","formatXAxis","handleChange_start","start","start_date","handleChange_end","end","end_date","name","id","top","right","bottom","left","props","theme","palette","text","secondary","textAnchor","fill","primary","main","r"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,KAA5C,EAAmDC,mBAAnD,EAAwEC,OAAxE,EAAiFC,MAAjF,EAAwFC,IAAxF,QAAoG,UAApG;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;AAEA,MAAMC,YAAN,SAA2BjB,KAAK,CAACkB,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KAAKC,UAAL,EADG;AAETC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,KAAKC,WAAL,CAAiB,YAAjB,CAAT,CAFF;AAGTC,MAAAA,OAAO,EAAE,IAAIF,IAAJ,CAAS,KAAKC,WAAL,CAAiB,YAAjB,CAAT;AAHA,KAAb;AAKH;;AAEDH,EAAAA,UAAU,GAAG;AACT,QAAID,IAAI,GAAG,EAAX;AACA,QAAIM,CAAC,GAAG,CAAR;;AACA,SAAKA,CAAL,EAASA,CAAC,GAAG,EAAb,EAAiBA,CAAC,EAAlB,EAAsB;AAClBN,MAAAA,IAAI,CAACO,IAAL,CAAU;AAAEC,QAAAA,IAAI,EAAC,CAAP;AAAUC,QAAAA,QAAQ,EAACH,CAAnB;AAAsBI,QAAAA,eAAe,EAAC,CAAtC;AAAyCC,QAAAA,cAAc,EAAE,CAAzD;AAA4DC,QAAAA,WAAW,EAAC,CAAC,EAAD,EAAI,EAAJ;AAAxE,OAAV;AACH;;AACD,WAAOZ,IAAP;AACH;;AAEDa,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,MAAL;AACH;;AAEDV,EAAAA,WAAW,CAACW,GAAD,EAAM;AACb;AACA,QAAIC,IAAI,GAAG,IAAIb,IAAJ,CAASY,GAAT,CAAX;AAAA,QACIE,KAAK,GAAG,CAAC,OAAOD,IAAI,CAACE,WAAL,KAAqB,CAA5B,CAAD,EAAiCC,KAAjC,CAAuC,CAAC,CAAxC,CADZ;AAAA,QAEIC,GAAG,GAAG,CAAC,MAAOJ,IAAI,CAACK,UAAL,EAAR,EAA4BF,KAA5B,CAAkC,CAAC,CAAnC,CAFV,CAFa,CAKT;;AACJ,WAAO,CAACH,IAAI,CAACM,WAAL,EAAD,EAAqBL,KAArB,EAA4BG,GAA5B,EAAiCG,IAAjC,CAAsC,GAAtC,CAAP;AACH;;AAGDT,EAAAA,MAAM,GAAG;AACLxB,IAAAA,CAAC,CAACkC,GAAF,CAAM,qBAAN,EAA8BxB,IAAD,IAAS;AAClC,WAAKyB,QAAL,CAAc;AACVzB,QAAAA,IAAI,EAAEA;AADI,OAAd;AAGH,KAJD;AAKH;;AAGD0B,EAAAA,MAAM,GAAG;AACT,UAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClCtC,MAAAA,CAAC,CAACuC,IAAF,CAAO;AACHC,QAAAA,IAAI,EAAE,MADH;AAEHC,QAAAA,GAAG,EAAE,qBAFF;AAGH/B,QAAAA,IAAI,EAAE;AAACgC,UAAAA,KAAK,EAAEJ,KAAK,CAACK,MAAN,CAAaC;AAArB,SAHH;AAIHC,QAAAA,OAAO,EAAE,MAAM,KAAKrB,MAAL,EAJZ;AAKHsB,QAAAA,KAAK,EAAE,MAAM,KAAKtB,MAAL;AALV,OAAP;AAOIuB,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACK,MAAN,CAAaC,KAAzB;AAEP,KAVD;;AAYA,aAASK,WAAT,CAAqBxB,GAArB,EAA0B;AACtB;AACA,UAAIC,IAAI,GAAG,IAAIb,IAAJ,CAASY,GAAT,CAAX;AAAA,UACIE,KAAK,GAAG,CAAC,OAAOD,IAAI,CAACE,WAAL,KAAqB,CAA5B,CAAD,EAAiCC,KAAjC,CAAuC,CAAC,CAAxC,CADZ;AAAA,UAEIC,GAAG,GAAG,CAAC,MAAMJ,IAAI,CAACK,UAAL,EAAP,EAA0BF,KAA1B,CAAgC,CAAC,CAAjC,CAFV;AAGA,aAAO,CAACH,IAAI,CAACM,WAAL,EAAD,EAAqBL,KAArB,EAA4BG,GAA5B,EAAiCG,IAAjC,CAAsC,GAAtC,CAAP;AACH;;AAED,UAAMiB,kBAAkB,GAAGxB,IAAI,IAAI;AAC/B,UAAIyB,KAAK,GAAG,KAAKrC,WAAL,CAAiBY,IAAjB,CAAZ;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAnD,MAAAA,CAAC,CAACuC,IAAF,CAAO;AACHC,QAAAA,IAAI,EAAE,MADH;AAEHC,QAAAA,GAAG,EAAE,qBAFF;AAGH/B,QAAAA,IAAI,EAAE;AAAC0C,UAAAA,UAAU,EAAED;AAAb,SAHH;AAIHN,QAAAA,OAAO,EAAE,MAAM,KAAKrB,MAAL,EAJZ;AAKHsB,QAAAA,KAAK,EAAE,MAAM,KAAKtB,MAAL;AALV,OAAP;AAOA,WAAKW,QAAL,CAAc;AACZvB,QAAAA,SAAS,EAAEc;AADC,OAAd;AAGH,KAbD;;AAeA,UAAM2B,gBAAgB,GAAG3B,IAAI,IAAI;AAC7B,UAAI4B,GAAG,GAAG,KAAKxC,WAAL,CAAiBY,IAAjB,CAAV;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACAtD,MAAAA,CAAC,CAACuC,IAAF,CAAO;AACHC,QAAAA,IAAI,EAAE,MADH;AAEHC,QAAAA,GAAG,EAAE,qBAFF;AAGH/B,QAAAA,IAAI,EAAE;AAAC6C,UAAAA,QAAQ,EAAED;AAAX,SAHH;AAIHT,QAAAA,OAAO,EAAE,MAAM,KAAKrB,MAAL,EAJZ;AAKHsB,QAAAA,KAAK,EAAE,MAAM,KAAKtB,MAAL;AALV,OAAP;AAOA,WAAKW,QAAL,CAAc;AACZpB,QAAAA,OAAO,EAAEW;AADG,OAAd;AAGH,KAbD;;AAeA,WACAqB,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWG,SAAvB,GACAmC,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWM,OAAvB,CADA,EAEA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,mBAApB;AAAwC,MAAA,QAAQ,EAAC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA,oBAAC,MAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWiC,KAFpB;AAGE,MAAA,QAAQ,EAAEL,kBAHZ;AAIE,MAAA,UAAU,EAAE;AACVmB,QAAAA,IAAI,EAAE,OADI;AAEVC,QAAAA,EAAE,EAAE;AAFM,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI;AAAQ,MAAA,KAAK,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,EAWI;AAAQ,MAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,EAYI;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZJ,EAaI;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbJ,EAcI;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdJ,EAeI;AAAQ,MAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,EAgBI;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,EAiBI;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBJ,EAkBI;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBJ,CAFA,CADJ,EAyBE,0CACE,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,KAAKhD,KAAL,CAAWG,SADzB;AAEI,MAAA,QAAQ,EAAEsC,kBAFd;AAGI,MAAA,YAAY,MAHhB;AAII,MAAA,SAAS,EAAE,KAAKzC,KAAL,CAAWG,SAJ1B;AAKI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWM,OALxB;AAMI,MAAA,UAAU,EAAC,SANf;AAOI,MAAA,mBAAmB,MAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM,OADzB;AAEI,MAAA,QAAQ,EAAEsC,gBAFd;AAGI,MAAA,UAAU,MAHd;AAII,MAAA,SAAS,EAAE,KAAK5C,KAAL,CAAWG,SAJ1B;AAKI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWM,OALxB;AAMI,MAAA,UAAU,EAAC,SANf;AAOI,MAAA,mBAAmB,MAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAzBF,EA8CE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA9CF,EA+CE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,IADnB;AAEE,MAAA,MAAM,EAAE;AACNgD,QAAAA,GAAG,EAAE,EADC;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,MAAM,EAAE,CAHF;AAINC,QAAAA,IAAI,EAAE;AAJA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAuB,MAAA,aAAa,EAAEZ,WAAtC;AAAmD,MAAA,MAAM,EAAE,KAAKa,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8BC,SAAzF;AAAoG,MAAA,OAAO,EAAE;AAAEL,QAAAA,IAAI,EAAE,EAAR;AAAYF,QAAAA,KAAK,EAAE;AAAnB,OAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,UAAf;AAA0B,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8BC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,GADT;AAEE,MAAA,QAAQ,EAAC,MAFX;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,QAAd;AAAwBC,QAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8BI;AAA5D,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAVF,EAmBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EAoBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,EAqBE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,UAA9B;AAAyC,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyBK,OAAzB,CAAiCC,IAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAsBE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,gBAA9B;AAA+C,MAAA,MAAM,EAAC,SAAtD;AAAgE,MAAA,SAAS,EAAE;AAAEC,QAAAA,CAAC,EAAE;AAAL,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EAuBE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,iBAA9B;AAAgD,MAAA,MAAM,EAAC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EAwBE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,aAAd;AAA4B,MAAA,MAAM,EAAC,SAAnC;AAA6C,MAAA,IAAI,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CADF,CA/CF,CAHA;AAgFC;;AA7KqC;;AA+K1C,eAAetE,SAAS,CAACK,YAAD,CAAxB","sourcesContent":["import React from 'react';\nimport { ComposedChart, Line, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend,Area } from 'recharts';\nimport Title from '../dashboard/Title';\nimport $ from \"jquery\";\nimport { withTheme } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass VisLineChart extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            data: this.createData(),\n            startDate: new Date(this.convertDate(\"2016-01-02\")),\n            endDate: new Date(this.convertDate(\"2020-06-02\"))\n        }\n    }\n\n    createData() {\n        let data = []\n        let i = 0;\n        for( i ; i < 10; i++) {\n            data.push({ time:0, quantity:i, firm_prediction:0, IBC_prediction: 0, sd_interval:[10,20]})\n        }\n        return data;\n    }\n\n    componentDidMount() {\n        this.update()\n    }\n\n    convertDate(str) {\n        // console.log(str)\n        var date = new Date(str),\n            month = (\"0\" + (date.getUTCMonth() + 1)).slice(-2),\n            day = (\"0\" + (date.getUTCDate())).slice(-2);\n            // console.log(day);\n        return [date.getFullYear(), month, day].join(\"-\");\n    }\n\n\n    update() {\n        $.get(\"api/select_advanced\", (data) =>{\n            this.setState({\n                data: data,\n            })\n        });\n    }\n\n\n    render() {\n    const handleChange_model = (event) => {\n        $.ajax({\n            type: \"POST\",\n            url: \"api/select_advanced\",\n            data: {model: event.target.value},\n            success: () => this.update(),\n            error: () => this.update()\n        });\n            console.log(event.target.value)\n\n    };\n\n    function formatXAxis(str) {\n        // console.log(str)\n        var date = new Date(str),\n            month = (\"0\" + (date.getUTCMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getUTCDate()).slice(-2);\n        return [date.getFullYear(), month, day].join(\"-\");\n    }\n    \n    const handleChange_start = date => {\n        var start = this.convertDate(date);\n        console.log(start)\n        $.ajax({\n            type: \"POST\",\n            url: \"api/select_advanced\",\n            data: {start_date: start},\n            success: () => this.update(),\n            error: () => this.update()\n        });\n        this.setState({\n          startDate: date\n        });\n    };\n\n    const handleChange_end = date => {\n        var end = this.convertDate(date);\n        console.log(end)\n        $.ajax({\n            type: \"POST\",\n            url: \"api/select_advanced\",\n            data: {end_date: end},\n            success: () => this.update(),\n            error: () => this.update()\n        });\n        this.setState({\n          endDate: date\n        });\n    };\n\n    return (\n    console.log(this.state.startDate),\n    console.log(this.state.endDate),\n    <React.Fragment>\n        <FormControl >\n        <InputLabel htmlFor=\"age-native-simple\" fontSize='50'>Model</InputLabel>\n        <Select\n          native\n          value={this.state.model}\n          onChange={handleChange_model}\n          inputProps={{\n            name: 'model',\n            id: 'age-native-simple',\n\n          }}\n        >\n            <option value={'2219'}>2219</option>\n            <option value={'W8'}>W8</option>\n            <option value={'W10'}>W10</option>\n            <option value={'W16'}>W16</option>\n            <option value={'W19'}>W19</option>\n            <option value={'X8'}>X8</option>\n            <option value={'X10'}>X10</option>\n            <option value={'X16'}>X16</option>\n            <option value={'X19'}>X19</option>\n        </Select>\n      </FormControl>\n\n      <>\n        <DatePicker\n            selected={this.state.startDate}\n            onChange={handleChange_start}\n            selectsStart\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n            dateFormat=\"MM/yyyy\"\n            showMonthYearPicker\n        />\n        <DatePicker\n            selected={this.state.endDate}\n            onChange={handleChange_end}\n            selectsEnd\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n            dateFormat=\"MM/yyyy\"\n            showMonthYearPicker\n        />\n        </>\n\n      <Title>Quantity vs. Date</Title>\n      <ResponsiveContainer>\n        <ComposedChart\n          data={this.state.data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 34,\n          }}\n        >\n          <XAxis dataKey=\"time\"  tickFormatter={formatXAxis} stroke={this.props.theme.palette.text.secondary} padding={{ left: 30, right: 30 }}/>\n          <YAxis dataKey=\"quantity\" stroke={this.props.theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: this.props.theme.palette.text.primary}}\n            >\n              Quantity\n            </Label>\n          </YAxis>\n            <Tooltip />\n            <Legend />\n          <Line type=\"monotone\" dataKey=\"quantity\" stroke={this.props.theme.palette.primary.main} />\n          <Line type=\"monotone\" dataKey=\"IBC_prediction\" stroke=\"#82ca9d\" activeDot={{ r: 8 }}/>\n          <Line type=\"monotone\" dataKey=\"firm_prediction\" stroke=\"#FF0000\" />\n          <Area dataKey=\"sd_interval\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n    )\n    }\n}\nexport default withTheme(VisLineChart);\n\n\n\n"]},"metadata":{},"sourceType":"module"}